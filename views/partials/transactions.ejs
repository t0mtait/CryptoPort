
<div class="relative overflow-x-auto shadow-md sm:rounded-lg">
    <p class="text-4xl m-2 dark:text-white bg-gray-800 rounded-lg p-5 text-center">Transactions</p>
    <table class="w-full text-sm text-left rtl:text-right text-white">
        <thead class="text-xs text-white uppercase bg-gray-700 ">
            <tr>
                <th scope="col" class="px-6 py-3">
                    Type
                </th>
                <th scope="col" class="px-6 py-3">
                    Date
                </th>
                <th scope="col" class="px-6 py-3">
                    Asset
                </th>
                <th scope="col" class="px-6 py-3">
                    Price
                </th>
                <th scope="col" class="px-6 py-3">
                    Quantity
                </th>
                <th scope="col" class="px-6 py-3">
                    Action
                </th>
            </tr>
        </thead>
        <tbody id = "transactionTableBody">
        </tbody>
    </table>
    <p id = "portfolio" class = "text-white"></p>
</div>

<script>
    async function fetchUserTransactions() {
        console.log('fetching user transactions');
        try {
            const response = await fetch('/userTransactions', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                },
                credentials: 'include' // Include cookies for authentication
            });

            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            const data = await response.json();
            displayUserTransactions(data);
        } catch (error) {
            console.error('Error fetching user assets:', error);
        }
    }

    function displayUserTransactions(data) {
    console.log('displaying user transactions');
    const portfolioDiv = document.getElementById('portfolio');
    const transactionHistoryBody = document.getElementById('transactionTableBody');
    portfolioDiv.innerHTML = '';
    transactionHistoryBody.innerHTML = ''; // Clear previous data

    if (data.Items && data.Items.length > 0) {
        data.Items.forEach((item, index) => {  // Added 'index' for alternating row colors
            const row = document.createElement('tr');
            row.classList.add(
                index % 2 === 0 ? 'bg-gray-800' : 'bg-gray-700',
                'border-b',
                'dark:border-gray-700'
            );
            row.innerHTML = `
                <td class="px-6 py-3">${item.type}</td>
                <td class="px-6 py-3">${item.date}</td>
                <td class="px-6 py-3">${item.asset}</td>
                <td class="px-6 py-3">${item.price}</td>
                <td class="px-6 py-3">${item.quantity}</td>
                <td class="px-6 py-3"><button type="button" class="focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm p-2 m-1 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900">Delete</button></td>
            `;
            transactionHistoryBody.appendChild(row);
        });
    } else {
        portfolioDiv.textContent = 'No transactions found.';
    }
}
window.addEventListener('DOMContentLoaded', function() {
    fetchUserTransactions();
});
</script>
